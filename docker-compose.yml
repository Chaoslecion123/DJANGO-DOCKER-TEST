version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    container_name: django 
    image: 862363392700.dkr.ecr.us-east-1.amazonaws.com/app-django
    # depends_on:
    #   - postgres
      # - redis
    environment:
      - DJANGO_SECRET_KEY=(6vrr3a4sz#an!9rbuein@gt-v(n6s5p=(g!b^my=qe3+f6=wv
      - DJANGO_ADMIN_URL=admin
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_AWS_STORAGE_BUCKET_NAME=comparteride-fernando
      - POSTGRES_HOST=db-django-elb.cu6nfzzoqklg.us-east-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_DB=dbdjango2
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

    
      # - ./.envs/.production/.django
      # - ./.envs/.production/.postgres
    command: /start
    networks: 
      - backnet



  # postgres:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/postgres/Dockerfile
  #   container_name: postgres
  #   image: 837789023751.dkr.ecr.us-east-1.amazonaws.com/postgres-lf:latest
  #   volumes:
  #     - production_postgres_data:/var/lib/postgresql/data
  #   env_file:
  #     - ./envs/.production/.postgres

  caddy:
    build:
      context: .
      dockerfile: ${PWD}/compose/production/caddy/Dockerfile
    container_name: caddy
    image: 862363392700.dkr.ecr.us-east-1.amazonaws.com/app-caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddyv2
    environment:
      - DOMAIN_NAME=multicontainerdockertutorial-env.eba-pjzxjuig.us-east-1.elasticbeanstalk.com
    # env_file:
    #   - ./.envs/.production/.caddy
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    networks: 
      - backnet



  # redis:
  #   image: redis:3.2

  # celeryworker:
  #   <<: *django
  #   image: fiisbook_production_celeryworker
  #   command: /start-celeryworker

  # celerybeat:
  #   <<: *django
  #   image: fiisbook_production_celerybeat
  #   command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: fiisbook_production_flower
  #   ports:
  #     - "5555:5555"
  #   command: /start-flower
    
networks:
  backnet:
